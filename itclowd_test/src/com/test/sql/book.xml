<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">



<mapper namespace="book">
 
<select id="indieBookList" parameterType="java.util.HashMap" resultType="com.test.book.model.IndieBookVo">
	select a.ib_no ib_no, c_no, ib_title, ib_img, avg(ia_grade) ia_grade, count(ia_grade) ia_count , m_no
	from indie_book a left outer join indie_assessment b
	on a.ib_no = b.ib_no where 0 = 0
	<if test="cate != 0">
		and c_no = #{cate} 
	</if>
	<if test="query != 'null'">
		and ib_title like CONCAT('%',#{query},'%')
	</if>
	GROUP BY ib_no
	 limit #{startRow}, #{limit};
</select>
<select id="getListCount" parameterType="java.util.HashMap" resultType="int">
	select count(ib_no) from indie_book where 0 = 0
	<if test="cate != 0">
		and c_no = #{cate}
	</if>
	<if test="query != 'null'">
		and ib_title like CONCAT('%',#{query},'%')
	</if>
	;
</select>
<select id="indieBookDetail" parameterType="int" resultType="com.test.book.model.IndieBookVo">
	select a.ib_no ib_no, c_no, ib_title, ib_writer, ib_price, ib_date, ip_no, ib_intro, ib_page, ib_img, ib_img1, ib_img2, ib_img3, ib_size, avg(ia_grade) ia_grade, count(ia_grade) ia_count 
	from indie_book a left outer join indie_assessment b
	on a.ib_no = b.ib_no
	where a.ib_no = #{ib_no};
</select>
<insert id="insertIndieGrade" parameterType="java.util.HashMap">
	insert into indie_assessment(ib_no, m_no, ia_grade, ia_content)
	values(#{ib_no}, #{m_no}, #{ia_grade}, #{ia_content});
</insert>

<select id="tasteSetList"  resultType="com.test.book.model.BookDto" flushCache="true">
	select a.b_no b_no, c_no, b_title, b_img, avg(ba_grade) ba_grade, count(ba_grade) ba_count
	from book a left outer join book_assessment b
	on a.b_no = b.b_no where 0 = 0
	GROUP BY b_no
	order by rand()
	 limit 20;
</select>
<insert id="insertBookGrade" parameterType="java.util.HashMap">
	insert into book_assessment(b_no, m_no, ba_grade, ba_content)
	values(#{b_no}, #{m_no}, #{ba_grade}, #{ba_content});
</insert>

<select id="memberTasteCate" parameterType="int" resultType="int">
	select c_no from  (
select c_no, max(conn) from
(select c_no, count(c_no) conn, m_no from 
	(select c_no, m_no from book_assessment a, book b where a.b_no = b.b_no
		union all
		select c_no, m_no from indie_assessment a, indie_book b where a.ib_no = b.ib_no) cate
		where m_no = #{m_no}
		GROUP BY c_no
	ORDER BY conn desc) a) a;
</select>
<select id="recommCate" parameterType="int" resultType="com.test.book.model.IndieBookVo">
	select a.ib_no ib_no, c_no, ib_title, ib_img, avg(ia_grade) ia_grade, count(ia_grade) ia_count 
	from indie_book a left outer join indie_assessment b
	on a.ib_no = b.ib_no where c_no = #{c_no}
	GROUP BY ib_no
	order by ia_grade desc
	 limit 5;
</select>
<select id="indieGradeMember" parameterType="int" resultType="int">
	select count(ib_no) from indie_assessment
	where m_no = #{m_no}
</select>
<select id="recommGrade" parameterType="java.util.HashMap" resultType="com.test.book.model.IndieBookVo">
	select a.ib_no ib_no, c_no, ib_title, ib_img, avg(ia_grade) ia_grade, count(ia_grade) ia_count 
	from indie_book a left outer join indie_assessment b
	on a.ib_no = b.ib_no
	<if test="c_no > 0">
		where c_no = #{c_no} 
	</if>
	GROUP BY ib_no
	order by ia_grade desc
	 limit 5;
</select>
<select id="recommSelectMyIndieGrade" parameterType="int" resultType="com.test.book.model.IndieAssessmentVo">
	select * from indie_assessment
		where m_no = #{m_no}
		ORDER BY ia_grade desc
</select>
<select id="recommSelectMyBookGrade" parameterType="int" resultType="com.test.book.model.BookAssessmentVo">
	select * from book_assessment
		where m_no = #{m_no}
		ORDER BY ba_grade desc
</select>
<select id="recommSelectYourBookGrade" parameterType="long" resultType="com.test.book.model.BookAssessmentVo">
	select * from book_assessment
		where b_no = #{b_no}
		ORDER BY ba_grade desc
</select>

<select id="getMyPageGradeList" parameterType="java.util.HashMap" resultType="com.test.book.model.BookDto">
	select ba_no, a.b_no b_no, c_no, b_title, b_img, avg(ba_grade) ba_grade, count(ba_grade) ba_count 
	from book a left outer join book_assessment b
	on a.b_no = b.b_no where m_no = #{m_no}
	GROUP BY b_no
	ORDER BY ba_no desc
	 limit #{startRow}, #{limit}
</select>
<select id="getMyPageGradeListCount" resultType="int" parameterType="int">
	select COALESCE(count(ba_no), 0) count from
		(select ba_no, a.b_no b_no, c_no, b_title, b_img, avg(ba_grade) ba_grade, count(ba_grade) ba_count 
	from book a left outer join book_assessment b
	on a.b_no = b.b_no where m_no = 11
	GROUP BY a.b_no) a
</select>
</mapper>